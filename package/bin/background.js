// Generated by CoffeeScript 1.4.0
(function() {
  var appIsRunning, closeWhenAppCloses, create, currentApp, onCreated, windowProperties, _ref, _ref1, _ref2,
    _this = this;

  windowProperties = {
    width: 775,
    height: 400,
    minWidth: 570,
    minHeight: 160
  };

  currentApp = null;

  appIsRunning = function() {
    return currentApp && !currentApp.contentWindow.closed;
  };

  onCreated = function(win) {
    var _ref;
    currentApp = win;
    return (_ref = win.onClosed) != null ? _ref.addListener(function() {
      return window.close();
    }) : void 0;
  };

  create = function() {
    return chrome.app.window.create('bin/main.html', windowProperties, onCreated);
  };

  if ((_ref = chrome.runtime.onStartup) != null) {
    _ref.addListener(function() {
      return chrome.storage.sync.get('autostart', function(storageMap) {
        if (storageMap.autostart) {
          return create();
        } else {
          if (!appIsRunning()) {
            return window.close();
          }
        }
      });
    });
  }

  if ((_ref1 = chrome.app.runtime.onLaunched) != null) {
    _ref1.addListener(function() {
      if (appIsRunning()) {
        return currentApp.focus();
      } else {
        return create();
      }
    });
  }

  /*
   * Repeatedly check if the window has been closed and close the background page
   * when it has.
   * TODO: Take this out once the onClose event hits stable.
  */


  closeWhenAppCloses = function() {
    var _this = this;
    return setInterval(function() {
      if (!appIsRunning()) {
        return window.close();
      }
    }, 1000);
  };

  if ((_ref2 = chrome.runtime.onUpdateAvailable) != null) {
    _ref2.addListener(function() {
      if (chrome.runtime.reload == null) {
        return;
      }
      if (appIsRunning()) {
        return closeWhenAppCloses();
      } else {
        return window.close();
      }
    });
  }

}).call(this);
